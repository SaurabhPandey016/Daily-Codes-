#include <bits/stdc++.h> 

int helper(vector<int>&arr,int start,int end,vector<vector<int>>&dp) {
    if(start>=end) {
        return dp[start][end]=0;
    }
    if(dp[start][end]!=-1) {
        return dp[start][end];
    }
    int ans=INT_MAX;
    for(int i=start;i<end;i++) {
        int left=arr[i]-(start>0?arr[start-1]:0);
        int right=arr[end]-(i>=0?arr[i]:0);
        if(dp[start][i]==-1) {
            dp[start][i]=helper(arr,start,i,dp);
        }
        if(dp[i+1][end]==-1) {
            dp[i+1][end]=helper(arr,i+1,end,dp);
        }
        ans=min(ans,left+right+dp[start][i]+dp[i+1][end]);
    }
    return dp[start][end]=ans;
}

int findMinCost(vector<int> &arr, int n){
    for(int i=1;i<n;i++) {
        arr[i]+=arr[i-1];
    }
    vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
    return helper(arr,0,n-1,dp);
}
