vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
        int i = 0;
        int j = 1;
        long long tempSum = arr[i];
        vector<int> ans;
        
        if(n == 1){
            if(arr[i] == s){
                return {1,1};
            }
            else{
                return {-1};
            }
        }
        
        if(s == 0){
            for(int i=0;i<n;i++){
                if(arr[i] == 0){
                    return {i+1,i+1};
                }
            }
            return {-1};
        }
        
        
        while(j<=n && i<=j){
            if(tempSum == s){
                ans.push_back(i + 1);
                ans.push_back(j);
                return ans;
            }
            else if(tempSum < s){
                tempSum += (arr[j]);
                j++;
                
            }
            else {
                tempSum -= arr[i];
                i++;
            }
            
        }
        return {-1};
    }
