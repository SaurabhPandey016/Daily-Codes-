  bool isPossible(vector<int> &stalls, int mid, int n, int k)
    {
        int cowNeed = 1;
        int dist = stalls[0];
        
        for(int i = 1; i<n; i++)
        {
            if(stalls[i] - dist >= mid)
            {
                cowNeed++;
                dist = stalls[i];
                if(cowNeed == k) return true;
            }
        }
        
       return false;
    }

    int solve(int n, int k, vector<int> &stalls) {
    
        sort(stalls.begin(), stalls.end());
        
        // Now I'm Gonna Apply The Binary Search
        int s = 1, e = stalls[n-1] - stalls[0], ans = -1;
        while(s <= e)
        {
            int mid = (s + e)/2;
            if(isPossible(stalls, mid, n, k))
            {
                ans = mid;
                s = mid + 1;
            }
            else e = mid - 1;
        }
        
        return ans;
        
    }
