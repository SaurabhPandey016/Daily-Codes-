int kSubstrConcat (int n, string s, int k)
    {
        if(n%k)return 0;
        unordered_map<string,int>mp;// to store the count of the substring of length k
        for(int i=0;i<n;i+=k){
            mp[s.substr(i,k)]++;
            if(mp.size()>2)return 0;// if there are more than two different substring exits then say false
        }
        int ans=0;
        
        if(mp.size()==2 && n/k==2){// if two different substring with only one count of each then true
            return 1;
        }
        for(auto it:mp){
           if(ans==0 && it.second>1){//if we found the count of any substring is more than 1 then ans=1
               ans=1;
           }
           else if(ans && it.second>1){// but if we know there is already a substring with count>1 but again we found count>1 then ans=0
               return 0;
           }
        }
        return ans;
        
    }
