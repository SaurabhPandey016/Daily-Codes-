 void dfs(int node,vector<bool>& vis,vector<int> adj[]){
        if(!vis[node]) return;
        vis[node] = false;
        for(auto it:adj[node]){
            dfs(it,vis,adj);
        }
    }
    int isCircle(vector<string> &arr) {
        vector<int> adj[26];
        vector<int> indegree(26,0);
        vector<bool> vis(26,false);
        for(int i=0;i<arr.size();i++){
            adj[arr[i][0]-'a'].push_back(arr[i].back()-'a');
            indegree[arr[i].back()-'a']++;
            vis[arr[i][0]-'a']=true;
            vis[arr[i].back()-'a']=true;
        }
        for(int i=0;i<26;i++){
            if(indegree[i] != adj[i].size()) return 0;
        }
        dfs(arr[0][0]-'a',vis,adj);
        for(int i=0;i<26;i++){
            if(vis[i]==true) return 0;
        }
        return 1;
    }
