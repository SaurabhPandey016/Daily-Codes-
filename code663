vector<int> serialize(Node *root) 
    {
        //Your code here
        vector<int> ans;
        queue<Node*> q;
        q.push(root);
        
        while(!q.empty()){
            auto z=q.front();
            q.pop();
            
            if(z==NULL){
                ans.push_back(-1);
                continue;
                
            }
            

            
            ans.push_back(z->data);
            // if(z->left)
                q.push(z->left);
            
            // if(z->right)
                q.push(z->right);
        }
     return ans;   
    }
    
    //Function to deserialize a list and construct the tree.
    Node* deSerialize(vector<int> &A)
    {
       //Your code here
        int i=0;
        Node* r=new Node(A[i++]);
        
        queue<Node*> q;
        q.push(r);
        
        int n=A.size();
        while(i<n){
            if(q.empty())
                break;
            
            auto z=q.front();
            q.pop();
            
            if(A[i]!=-1){
                z->left=new Node(A[i++]);
                q.push(z->left);
            }
            else
                i++;
        
            
            if(i>=n)
                break;
            
            if(A[i]!=-1){
                z->right=new Node(A[i++]);
                q.push(z->right);
            }
            else
                i++;
            
        }   
        
        return r;
    }

