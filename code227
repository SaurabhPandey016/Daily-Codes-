#include <bits/stdc++.h> 

using namespace std; 

bool isSquareful(int a, int b) { 

    int root = sqrt(a + b); 

    return (root * root == a + b); 

    } 

    void backtracking(vector<int>& arr, unordered_map<int, int>& freq, int& count, int lastNum, int remaining) { 

        if (remaining == 0) { 

            count++; 

            return; 

            } 

            for (auto& it : freq) { 

                int num = it.first; 

                int& freqCount = it.second; 

                if (freqCount > 0 && (lastNum == -1 || isSquareful(lastNum, num))) { 

                    freqCount--; 

                    backtracking(arr, freq, count, num, remaining - 1); 

                    freqCount++; 

                    } 

                } 

            } 

            int numberOfSquarefulArrays(vector<int>& arr, int n) { 

                unordered_map<int, int> freq; 

                // Frequency of each number 

                for (int num : arr) { 

                    freq[num]++; 

                    } 

                    int count = 0; 

                    backtracking(arr, freq, count, -1, n); 

                    return count; 

                    }
