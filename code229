#include <bits/stdc++.h> 

int rec(int &start,int mask,int pos,vector<vector<int>> &distance,vector<vector<int>>&dp,int &vis_all,int &n)
{
    if (mask==vis_all) return distance [pos][start];
    if (dp[mask][pos]!=-1) return dp[mask][pos];
    int ans=INT_MAX;
    for (int i=0;i<n;i++)
    {
        if ((mask&(1<<i))==0)
        {
            int newMask=(mask|(1<<i));
            int temp=distance[pos][i]+rec(start,newMask,i,distance,dp,vis_all,n);
            ans=min(ans,temp);
        }
    }
    return dp[mask][pos]=ans;
}
int shortestRoute(vector<vector<int>> &distance)
{
	int n=distance.size();
    int vis_all=((1<<n)-1);
    int ans=INT_MAX;
    int start=0;
    vector<vector<int>>dp((1<<n),vector<int>(n,-1));
    ans=min(ans,rec(start,1,0,distance,dp,vis_all,n));
    return ans;
}
