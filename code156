class Solution {
public:
    int minOperations(vector<int> &nums, int x) {
        // find the longest subarray with sum = sum - x
        int sum = 0;
        sum = accumulate(nums.begin(), nums.end(), sum);
        if(x > sum)
            return -1;
        sum-= x;
        int i = 0, j = 0;
        int curr_sum = 0;
        int mx_len = -1;
        int n = nums.size();
        while(j<n)
        {
            curr_sum+= nums[j];
            // find the longest subarray with sum = "sum"
            while(curr_sum > sum)
                curr_sum-= nums[i++];
            if(curr_sum == sum)
                mx_len = max(mx_len, j-i+1);
            j++;
        }
        return mx_len == -1? -1 : n-mx_len;
    }
};
