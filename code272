/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int,int> postOrder(TreeNode* root,int &ans){
        if(root==NULL){
            return {0,0};
        }
        pair<int,int> leftSum=postOrder(root->left,ans);
        pair<int,int> rightSum=postOrder(root->right,ans);
        int count=leftSum.second+rightSum.second+1;
        int sum=leftSum.first+rightSum.first+root->val;
        int avg=(sum)/count;
        if(avg==root->val){
            ans++;
        }
        return {sum,count};
    }
    int averageOfSubtree(TreeNode* root) {
        double count=0.0; int sum=0;
        int ans=0;
        postOrder(root,ans);
        return ans;
    }
};
