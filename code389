vector<int> serialize(Node *root) 
    {
        //Your code here
        queue<Node*>q;
        q.push(root);
        vector<int>v;
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            if(it!=NULL)
            v.push_back(it->data);
            else
            v.push_back(-1);
            
            if(it==NULL)
            continue;
            if(it!=NULL)
            {
                q.push(it->left);
                q.push(it->right);
            }
        }
        return v;
    }
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &a)
    {
       //Your cod
       queue<Node*>q;
       Node *root=new Node(a[0]);
       int i=1;
       int n=(int)(a.size());
       q.push(root);
       while(!q.empty())
       {
           auto it=q.front();
           q.pop();
           if(i<n)
           {
               
               Node *x=NULL;
               if(a[i]!=-1)
               x=new Node(a[i]);
               i++;
               it->left=x;
               if(x!=NULL)
               q.push(x);
           }
           else
           {
               it->left=NULL;
           }
           if(i<n)
           {
               Node *x=NULL;
               if(a[i]!=-1)
               x=new Node(a[i]);
               i++;
               it->right=x;
               if(x!=NULL)
               q.push(x);
           }
           else
           {
               it->right=NULL;
           }
       }
       return root;
    }
