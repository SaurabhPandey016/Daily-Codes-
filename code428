class Solution {
public:
    void sortColors(vector<int>& nums) {
        
        // Brutforce
        // Tc -> NLogN Sc -> O(N);
        //sort(nums.begin(), nums.end());

        // Better
        // Step 1 -> Take 3 variables 0 1 & 2;
        // * count The Number Of 0's 1's & 2's Then 
        // Rearrange the array With these order;

        int n = nums.size();

        // int zero = 0, one = 0, two = 0;
        // for(int i = 0; i<n; i++)
        // {
        //     if(nums[i] == 0) zero++;
        //     if(nums[i] == 1) one++;
        //     if(nums[i] == 2) two++;
        // }

        // // For Zero; 0 -> se zero - 1 tak 0 bharde
        // for(int i = 0; i<zero; i++)
        // {
        //     nums[i] = 0;
        // }

        // // For one; Ab hm Zero se shuru krege or kitni space lega 11 jo zero ne li + jitne 1 hai utni space yani one + zero;
        // for(int i = zero; i<one+zero; i++)
        // {
        //     nums[i] = 1;
        // }

        // // For two;
        // // Same for this one + zero ki space Occupied hai to start from there
        // // Then go till last element And Fill 2;
        // for(int i = one + zero; i<n; i++)
        // {
        //     nums[i] = 2;
        // }

        // // Tc -> O(N) + O(N);
        // // Sc -> O(1) NO Extra Space;
        

        // Best Solution Using Kuch Algo
        int low = 0, mid = 0, high = n-1;

        // I Know 0 to low - 1 pe Saare 0's hai;
        // Then low se mid - 1 tak saare 1 hai;
        // mid se high tak saare random hai tik
        // High + 1 se n-1 tak saare 2 hai;
        // Start the Algo;
        while(mid <= high)
        {
            if(nums[mid] == 0)
            {
                swap(nums[mid], nums[low]);
                mid++, low++;
            }
            else if(nums[mid] == 1)
            {
                mid++;
            }
            else 
            {
                swap(nums[mid], nums[high]);
                high--;
            }
        }

        // TC-> O(N) One go;
        // Sc -> O(1);
    }
};
