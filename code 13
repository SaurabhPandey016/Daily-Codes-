/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {

        // First Case If (No Element Given);
        if(head == NULL) return head;

        // Second Case If val wanna Del is at First Node;
        while(head != NULL && head-> val == val) head = head-> next;

        // Middle Or Last Node;
        ListNode * curr = head;

        while(curr != NULL && curr-> next != NULL )
        {
            if( curr-> next->val == val)
            {
                curr->next = curr->next->next;
            } 
            else 
            {
                curr = curr-> next;   
            }
        }

        return head;
    }

// TC -> O(N);
// SC -> O(1);

};
